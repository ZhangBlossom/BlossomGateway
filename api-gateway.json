{
  "rules": [
    {
      "id": "user-private",
      "name": "user-private",
      "paths": [
        "/user/private/user-info"
      ],
      "prefix": "/user/private",
      "protocol": "http",
      "serviceId": "backend-user-server",
      "filterConfigs": [
        {
          "config": {
            "load_balance": "RoundRobin"
          },
          "id": "load_balance_filter"
        },
        {
          "id":"auth_filter"
        }
      ]
    },
    {
      "id": "user",
      "name": "user",
      "paths": [
        "/user/login"
      ],
      "prefix": "/user",
      "protocol": "http",
      "serviceId": "backend-user-server",
      "filterConfigs": [
        {
          "config": {
            "load_balance": "Random"
          },
          "id": "load_balance_filter"
        }
      ]
    },
    {
      "id": "http-server",
      "name": "http-server",
      "paths": [
        "/http-server/ping"
      ],
      "prefix": "/http-server",
      "protocol": "http",
      "retryConfig": {
        "times": 3
      },
      "serviceId": "backend-http-server",
      "flowControlConfigs":[
        {
          "type":"path",
          "value":"/http-server/ping",
          "model":"distributed",
          "config":{
            "duration":1,
            "permits":1
          }
        }
      ],
      "hystrixConfigs":[{
        "path":"/http-server/ping",
        "timeoutInMilliseconds":5000,
        "threadCoreSize":2,
        "fallbackResponse":"熔断超时"
      }],
      "filterConfigs": [
        {
          "config": {
            "load_balance": "ConsistentHash"
            // "load_balance": "RoundRobin"
            // "load_balance": "Random"
            // "load_balance": "Weight"
          },
          "id": "load_balance_filter"
        }
      ,
        {
          "id": "auth_filter"
        }
      ,
        {
          "id":"flow_ctl_filter"
        }
      ,
        {
          "id": "mock_filter",
          "config":{
            "GET /http-server/ping":"this is Mock response can you see1?"
          }
        }
      ]
    },

    {
      "id": "http-dubbo-server",
      "name": "http-dubbo-server",
      "paths": [
        "/rpc"
      ],
      "prefix": "/dubbo",
      "protocol": "dubbo",
      "retryConfig": {
        "times": 3
      },
      "serviceId": "backend-dubbo-server",
      "filterConfigs": [
        {
          "config": {
            "load_balance": "RoundRobin"
          },
          "id": "load_balance_filter"
        }
      ]
    }
  ]
}